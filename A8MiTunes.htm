<!--Assignment: MiTunes
	Author: Jakub Holewik
	ID: B615637
	Login: cojrh2-->

<!DOCTYPE html>
<html>
	<head>
		<title>MiTunes</title>
		<style type="text/css">
			*
			{
				box-sizing: content-box;
			}

			body
			{
				background-color: #272727;
			}

			#tabs
			{
				margin-bottom: 7px;
				text-align: center;
			}

			.display
			{
				display: inline-block;
				overflow: auto;
				height: 400px;
				width: 350px;
				text-align: left;
				background-color: #000000;
				border: 3px solid #3CB371;
				font-family: Rockwell, Verdana, sans-serif;
				font-size: 18px;
				color: #FFFFFF;
			}

			.data
			{
				margin: 12px 0;
			}

			.choice
			{
				margin: 12px 0;
				font-size: 22px;
			}

			.choice:hover
			{
				background-color: #696969;
				cursor: pointer;
			}

			.found
			{
				background-color: #FF0000;
			}

			.quote
			{
				font-size: 20px;
			}

			#keyboard
			{
				margin: auto;
				height: 270px;
				width: 560px;
				line-height: 30px;
				text-align: center;
				background-color: #000000;
				border: 5px solid #3CB371;
				border-radius: 10%;
			}

			#search_bar
			{
				margin-top: 10px;
				margin-bottom: 8px;
				height: 35px;
				width: 180px;
				text-align: center;
				background-color: #696969;
				border-width: 0;
				font-family: Helvetica, sans-serif;
				font-size: 25px;
				color: #FFFFFF;
				cursor: pointer;
			}

			.key
			{
				display: inline-block;
				margin: 4px;
				padding: 3px;
				height: 32px;
				width: 35px;
				border: 3px solid #3CB371;
				border-radius: 20%;
				font-family: Calibri, sans-serif;
				font-size: 40px;
				color: #FFFFFF;
			}

			.key:hover
			{
				background-color: #696969;
				cursor: pointer;
			}

			.big
			{
				width: 150px;
			}
		</style>
		<script type="text/javascript" src="music.js" /></script>
		<script type="text/javascript">
			
			function generateSongData(album_id, song_id)
			{
				//This function generates a song tab, whenever a new song is selected
				var alb = albums[album_id];
				var track = alb.tracks[song_id];
				var path = "audio/" + alb.artist + "/" + alb.title + "/" + track.mp3.substring(0, track.mp3.length - 4);
				var code =  "<img src='artwork/" + alb.artwork + ".jpg' style='max-width: 250px; max-height: 250px;' />" +
							"<p class='data'>" + alb.artist + "<br />" + alb.title + "</p>" +
							"<p class='data'>Track " + (song_id + 1) + "/" + alb.tracks.length + "<br />" + track.title + "</p>" +
							"<audio controls='controls'>" +
							"<source src='" + path +".mp3' type='audio/mpeg'>" +
							"<source src='" + path +".wav' type='audio/wav'>" +
							"Your browser does not support the audio element.</audio>";

				current_track.innerHTML = code;
			}

			function generateTrackList(album_id)
			{
				//This function generates code for the track list, whenever a new album is chosen
				var alb = albums[album_id];
				var code = alb.title + "<br />by " + alb.artist;
				
				for(i in alb.tracks)
				{
					code += "<div class='choice' onclick='generateSongData(" + album_id + ", " + i + ");'>" + alb.tracks[i].title + "</div>";
				}

				track_list.innerHTML = code;
			}

			function generateAlbumList()
			{
				//This function generates code for the album list
				var code = "Albums:<br /><br />";
				for(i in albums)
				{
					code += "<div class='choice' onclick='generateTrackList(" + i + ");'>" + albums[i].artist + "/" + albums[i].title + "</div>";
				}

				album_list.innerHTML = code;
			}

			function search()
			{
				//This function will output the found contents in track list, whenever contents of search bar change
				var s = search_bar.value;
				code = "";

				if(s == "")
				{
					code = "No album selected";
				}
				else
				{
					for(i in albums)
					{
						var alb = albums[i];
						for(k in alb.tracks)
						{
							var track = alb.tracks[k];
							var low_title = track.title.toLowerCase();
							var low_lyrics = track.lyrics.toLowerCase();
							var in_title = false; //Has the keyword been found in the title?
							var in_lyrics = false; //Has the keyword been found in the lyrics?
							var ti = low_title.indexOf(s); //position in title
							if(ti != -1) in_title = true;
							var li = low_lyrics.indexOf(s); //position in lyrics
							if(li != -1) in_lyrics = true;

							if(in_title || in_lyrics)
							{
								code += "<p class='choice' onclick='generateSongData(" + i + ", " + k + ");'>";

								//The spans of class "found" represent the highlighted text that matches the keyword
								if(in_title)
								{
									code += track.title.substring(0, ti) +
											"<span class='found'>" + track.title.substring(ti, ti + s.length) + "</span>" +
											track.title.substring(ti + s.length, track.title.length);
								}
								else
								{
									code += track.title;
								}

								code += "<br />" + alb.artist + ", " + alb.title;

								if(in_lyrics)
								{
									code += "<br /><span class='quote'>";
									var start = track.lyrics.lastIndexOf(" ", li - 5); //I chose 5 as the minimal number of characters to display before and after the found keyword
									if(start == -1) start = 0;
									else start++;
									var end = track.lyrics.indexOf(" ", li + s.length + 5);
									if(end == -1) end = track.lyrics.length;
									if(start != 0) code += "...";
									code += track.lyrics.substring(start, li) +
											"<span class='found'>" + track.lyrics.substring(li, li + s.length) + "</span>" +
											track.lyrics.substring(li + s.length, end);
									if(end != track.lyrics.length) code += "...";
									code += "</span>";
								}

								code += "</p>";
							}
						}
					}

					if(code == "")
					{
						code = "No matches found.";
					}
				}

				track_list.innerHTML = code;
			}

			function deleteLetter()
			{
				//This function deletes the last letter of the search bar
				search_bar.value = search_bar.value.substring(0, search_bar.value.length - 1);
				search();
			}

			function insertLetter(c)
			{
				//This function inserts value of the clicked button into the search bar
				search_bar.value += c.toLowerCase();
				search();
			}

			function resetSearchBar()
			{
				//This function deletes all letters from the search bar
				search_bar.value = "";
				search();
			}

			function generateKeyboard()
			{
				//This function generates code for the keyboard used in the 'keyboard' div
				var qwerty = [ "QWERTYUIOP", "ASDFGHJKL", "ZXCVBNM" ]; //list of all keys in a qwerty keyboard, grouped in three rows
				var code = "<form><input type='text' id='search_bar' onclick='search();' readonly></form>";

				for(i in qwerty)
				{
					code += "<div>";
					for(var k = 0; k < qwerty[i].length; k++)
					{
						code += "<div class='key' onclick='insertLetter(this.innerHTML);'>" + qwerty[i][k] + "</div>";
					}
					code += "</div>";
				}

				//additional buttons on the final row
				code += "<div><div class='key big' onclick='insertLetter(\" \");'>SPACE</div>";
				code += "<div class='key big' onclick='deleteLetter();'>BACK</div>";
				code += "<div class='key big' onclick='resetSearchBar();'>RESET</div></div>";

				keyboard.innerHTML = code;
			}
		</script>
	</head>
	<body onload='generateAlbumList(); generateKeyboard();'>
		<div id='tabs'>
			<div id='album_list' class='display'>
			</div>
			<div id='track_list' class='display'>
				No album selected
			</div>
			<div id='current_track' class='display'>
				No song selected
			</div>
		</div>
		<div id='keyboard'>
		</div>
	</body>
</html>